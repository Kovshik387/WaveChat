version: '3.9'

name: 'wavechat'

networks:
  wavechat-dev:
    driver: bridge

services:
  postgres_db:
    image: postgres:latest

    container_name: postgres
    
    environment:
      POSTGRES_NAME: 'postgres'
      POSTGRES_PASSWORD: '123'
      POSTGRES_DB: 'CorporateMessanger'

    ports:
      - "5433:5432"
    
    networks:
      - wavechat-dev
    
    volumes:
      - postgres-data:/var/lib/postgresql/data
 
  minio:
    image: minio/minio

    container_name: minio

    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - wavechat-dev
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: masoud
      MINIO_ROOT_PASSWORD: Strong#Pass#2022
    command: server /data --console-address :9001

  storage_service:
    image: ${DOCKER_REGISTRY-}wavechat-storage
    container_name: wavechat-storage-service
    build:
      context: .
      dockerfile: /src/Systems/Api/WaveChat.Storage/Dockerfile
    networks:
      - wavechat-dev
    ports:
      - "8090:8080"
    environment:
      - name=ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - postgres_db

  account_service:
    image: ${DOCKER_REGISTRY-}wavechat-account
    container_name: wavechat-account-service
    build:
      context: .
      dockerfile: /src/Systems/Api/WaveChat.Account/Dockerfile
    networks:
      - wavechat-dev
    ports:
      - "8070:8080"
    environment:
      - name=ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - postgres_db

  message_service:
    image: ${DOCKER_REGISTRY-}wavechat-message
    container_name: wavechat-message-service
    build:
      context: .
      dockerfile: /src/Systems/Api/WaveChat.Message/Dockerfile
    networks:
      - wavechat-dev
    ports:
      - "8020:8080"
    environment:
      - name=ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - postgres_db

  authorization_service:
    image: ${DOCKER_REGISTRY-}wavechat-authorization
    container_name: wavechat-auth-service
    build:
      context: .
      dockerfile: /src/Systems/Api/WaveChat.Authorization/Dockerfile
    networks: 
      - wavechat-dev
    ports:
      - "8010:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - postgres_db
    # env_file:
    #   - env.authorization

volumes:
  postgres-data:
  identity:
  minio_storage: